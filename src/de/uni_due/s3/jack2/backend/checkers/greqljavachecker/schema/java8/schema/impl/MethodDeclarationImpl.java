/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.impl;

import de.uni_koblenz.jgralab.impl.IncidenceIterable;

import de.uni_koblenz.jgralab.impl.std.VertexImpl;

import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.exception.GraphIOException;
import de.uni_koblenz.jgralab.exception.NoSuchAttributeException;

import java.io.IOException;

public class MethodDeclarationImpl extends VertexImpl implements de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclaration, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclaration, de.uni_koblenz.jgralab.Vertex {

	protected boolean _constructor;

	protected int _dimension;

	protected int _line;

	protected java.lang.String _name;

	public MethodDeclarationImpl(int id, de.uni_koblenz.jgralab.Graph g) {
		super(id, g);
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.VertexClass getAttributedElementClass() {
		return de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclaration.VC;
	}

	@Override
	public final java.lang.Class<? extends de.uni_koblenz.jgralab.Vertex> getSchemaClass() {
		return de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclaration.class;
	}

	@SuppressWarnings("unchecked")
	public <T> T getAttribute(String attributeName) {
		if (attributeName.equals("constructor")) return (T) (java.lang.Boolean) is_constructor();
		if (attributeName.equals("dimension")) return (T) (java.lang.Integer) get_dimension();
		if (attributeName.equals("line")) return (T) (java.lang.Integer) get_line();
		if (attributeName.equals("name")) return (T) get_name();
		throw new NoSuchAttributeException("MethodDeclaration doesn't contain an attribute " + attributeName);
	}

	public <T> void setAttribute(String attributeName, T data) {
		if (attributeName.equals("constructor")) {
			set_constructor((java.lang.Boolean) data);
			return;
		}
		if (attributeName.equals("dimension")) {
			set_dimension((java.lang.Integer) data);
			return;
		}
		if (attributeName.equals("line")) {
			set_line((java.lang.Integer) data);
			return;
		}
		if (attributeName.equals("name")) {
			set_name((java.lang.String) data);
			return;
		}
		throw new NoSuchAttributeException("MethodDeclaration doesn't contain an attribute " + attributeName);
	}

	public boolean is_constructor() {
		return _constructor;
	}

	public void set_constructor(boolean _constructor) {
		graph.fireBeforeChangeAttribute(this, "constructor", this._constructor, _constructor);
		Object oldValue = this._constructor;
		this._constructor = _constructor;
		internalMarkAttributeAsSet(0, true);
		graphModified();
		graph.fireAfterChangeAttribute(this, "constructor", oldValue, _constructor);
	}

	public int get_dimension() {
		return _dimension;
	}

	public void set_dimension(int _dimension) {
		graph.fireBeforeChangeAttribute(this, "dimension", this._dimension, _dimension);
		Object oldValue = this._dimension;
		this._dimension = _dimension;
		internalMarkAttributeAsSet(1, true);
		graphModified();
		graph.fireAfterChangeAttribute(this, "dimension", oldValue, _dimension);
	}

	public int get_line() {
		return _line;
	}

	public void set_line(int _line) {
		graph.fireBeforeChangeAttribute(this, "line", this._line, _line);
		Object oldValue = this._line;
		this._line = _line;
		internalMarkAttributeAsSet(2, true);
		graphModified();
		graph.fireAfterChangeAttribute(this, "line", oldValue, _line);
	}

	public java.lang.String get_name() {
		return _name;
	}

	public void set_name(java.lang.String _name) {
		graph.fireBeforeChangeAttribute(this, "name", this._name, _name);
		Object oldValue = this._name;
		this._name = _name;
		internalMarkAttributeAsSet(3, true);
		graphModified();
		graph.fireAfterChangeAttribute(this, "name", oldValue, _name);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
		{
			boolean attrIsSet = true;
			if (!io.isNextToken(de.uni_koblenz.jgralab.impl.TgLexer.Token.UNSET_LITERAL)) {
				_constructor = io.matchBoolean();
			} else {
				io.match();
				attrIsSet = false;
			}
			if (attrIsSet) {set_constructor(_constructor);}
		}
		{
			boolean attrIsSet = true;
			if (!io.isNextToken(de.uni_koblenz.jgralab.impl.TgLexer.Token.UNSET_LITERAL)) {
				_dimension = io.matchInteger();
			} else {
				io.match();
				attrIsSet = false;
			}
			if (attrIsSet) {set_dimension(_dimension);}
		}
		{
			boolean attrIsSet = true;
			if (!io.isNextToken(de.uni_koblenz.jgralab.impl.TgLexer.Token.UNSET_LITERAL)) {
				_line = io.matchInteger();
			} else {
				io.match();
				attrIsSet = false;
			}
			if (attrIsSet) {set_line(_line);}
		}
		{
			boolean attrIsSet = true;
			if (!io.isNextToken(de.uni_koblenz.jgralab.impl.TgLexer.Token.UNSET_LITERAL)) {
				_name = io.matchUtfString();
			} else {
				io.match();
				attrIsSet = false;
			}
			if (attrIsSet) {set_name(_name);}
		}
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		if (attributeName.equals("constructor")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			boolean attrIsSet = true;
			if (!io.isNextToken(de.uni_koblenz.jgralab.impl.TgLexer.Token.UNSET_LITERAL)) {
				_constructor = io.matchBoolean();
			} else {
				io.match();
				attrIsSet = false;
			}
			if (attrIsSet) {set_constructor(_constructor);}
			return;
		}
		if (attributeName.equals("dimension")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			boolean attrIsSet = true;
			if (!io.isNextToken(de.uni_koblenz.jgralab.impl.TgLexer.Token.UNSET_LITERAL)) {
				_dimension = io.matchInteger();
			} else {
				io.match();
				attrIsSet = false;
			}
			if (attrIsSet) {set_dimension(_dimension);}
			return;
		}
		if (attributeName.equals("line")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			boolean attrIsSet = true;
			if (!io.isNextToken(de.uni_koblenz.jgralab.impl.TgLexer.Token.UNSET_LITERAL)) {
				_line = io.matchInteger();
			} else {
				io.match();
				attrIsSet = false;
			}
			if (attrIsSet) {set_line(_line);}
			return;
		}
		if (attributeName.equals("name")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			boolean attrIsSet = true;
			if (!io.isNextToken(de.uni_koblenz.jgralab.impl.TgLexer.Token.UNSET_LITERAL)) {
				_name = io.matchUtfString();
			} else {
				io.match();
				attrIsSet = false;
			}
			if (attrIsSet) {set_name(_name);}
			return;
		}
		throw new NoSuchAttributeException("MethodDeclaration doesn't contain an attribute " + attributeName);
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
		if (isUnsetAttribute("constructor")) {
			io.writeIdentifier(GraphIO.UNSET_LITERAL);
		} else {
			io.writeBoolean(_constructor);
		}
		if (isUnsetAttribute("dimension")) {
			io.writeIdentifier(GraphIO.UNSET_LITERAL);
		} else {
			io.writeInteger(_dimension);
		}
		if (isUnsetAttribute("line")) {
			io.writeIdentifier(GraphIO.UNSET_LITERAL);
		} else {
			io.writeInteger(_line);
		}
		if (isUnsetAttribute("name")) {
			io.writeIdentifier(GraphIO.UNSET_LITERAL);
		} else {
			io.writeUtfString(_name);
		}
	}

	public String writeAttributeValueToString(String attributeName) throws IOException, GraphIOException {
		if (attributeName.equals("constructor")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			if (isUnsetAttribute("constructor")) {
				io.writeIdentifier(GraphIO.UNSET_LITERAL);
			} else {
				io.writeBoolean(_constructor);
			}
			return io.getStringWriterResult();
		}
		if (attributeName.equals("dimension")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			if (isUnsetAttribute("dimension")) {
				io.writeIdentifier(GraphIO.UNSET_LITERAL);
			} else {
				io.writeInteger(_dimension);
			}
			return io.getStringWriterResult();
		}
		if (attributeName.equals("line")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			if (isUnsetAttribute("line")) {
				io.writeIdentifier(GraphIO.UNSET_LITERAL);
			} else {
				io.writeInteger(_line);
			}
			return io.getStringWriterResult();
		}
		if (attributeName.equals("name")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			if (isUnsetAttribute("name")) {
				io.writeIdentifier(GraphIO.UNSET_LITERAL);
			} else {
				io.writeUtfString(_name);
			}
			return io.getStringWriterResult();
		}
		throw new NoSuchAttributeException("MethodDeclaration doesn't contain an attribute " + attributeName);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclaration getNextBodyDeclaration() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclaration)getNextVertex(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclaration.VC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Element getNextElement() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Element)getNextVertex(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Element.VC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclaration getNextMethodDeclaration() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclaration)getNextVertex(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclaration.VC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Node getNextNode() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Node)getNextVertex(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Node.VC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters getFirstMethodDeclarationParametersIncidence() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters.EC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters getFirstMethodDeclarationParametersIncidence(EdgeDirection orientation) {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters.EC, orientation);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression getFirstElementExpressionIncidence() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression.EC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression getFirstElementExpressionIncidence(EdgeDirection orientation) {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression.EC, orientation);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.AnonymousClassDeclarationBodyDeclarations getFirstAnonymousClassDeclarationBodyDeclarationsIncidence() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.AnonymousClassDeclarationBodyDeclarations)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.AnonymousClassDeclarationBodyDeclarations.EC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.AnonymousClassDeclarationBodyDeclarations getFirstAnonymousClassDeclarationBodyDeclarationsIncidence(EdgeDirection orientation) {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.AnonymousClassDeclarationBodyDeclarations)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.AnonymousClassDeclarationBodyDeclarations.EC, orientation);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody getFirstMethodDeclarationBodyIncidence() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody.EC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody getFirstMethodDeclarationBodyIncidence(EdgeDirection orientation) {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody.EC, orientation);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Access getFirstAccessIncidence() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Access)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Access.EC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Access getFirstAccessIncidence(EdgeDirection orientation) {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Access)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Access.EC, orientation);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType getFirstMethodDeclarationReturnTypeIncidence() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType.EC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType getFirstMethodDeclarationReturnTypeIncidence(EdgeDirection orientation) {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType.EC, orientation);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation getFirstMethodDeclarationAnnotationIncidence() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation.EC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation getFirstMethodDeclarationAnnotationIncidence(EdgeDirection orientation) {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation.EC, orientation);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.EnumDeclarationBodyDeclaration getFirstEnumDeclarationBodyDeclarationIncidence() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.EnumDeclarationBodyDeclaration)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.EnumDeclarationBodyDeclaration.EC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.EnumDeclarationBodyDeclaration getFirstEnumDeclarationBodyDeclarationIncidence(EdgeDirection orientation) {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.EnumDeclarationBodyDeclaration)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.EnumDeclarationBodyDeclaration.EC, orientation);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.LambdaExpressionBody getFirstLambdaExpressionBodyIncidence() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.LambdaExpressionBody)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.LambdaExpressionBody.EC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.LambdaExpressionBody getFirstLambdaExpressionBodyIncidence(EdgeDirection orientation) {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.LambdaExpressionBody)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.LambdaExpressionBody.EC, orientation);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier getFirstMethodDeclarationReceiverQualifierIncidence() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier.EC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier getFirstMethodDeclarationReceiverQualifierIncidence(EdgeDirection orientation) {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier.EC, orientation);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.TypeDeclarationBodyDeclarations1 getFirstTypeDeclarationBodyDeclarations1Incidence() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.TypeDeclarationBodyDeclarations1)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.TypeDeclarationBodyDeclarations1.EC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.TypeDeclarationBodyDeclarations1 getFirstTypeDeclarationBodyDeclarations1Incidence(EdgeDirection orientation) {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.TypeDeclarationBodyDeclarations1)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.TypeDeclarationBodyDeclarations1.EC, orientation);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers getFirstMethodDeclarationModifiersIncidence() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers.EC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers getFirstMethodDeclarationModifiersIncidence(EdgeDirection orientation) {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers.EC, orientation);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Child getFirstChildIncidence() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Child)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Child.EC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Child getFirstChildIncidence(EdgeDirection orientation) {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Child)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Child.EC, orientation);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ExpressionAccess1 getFirstExpressionAccess1Incidence() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ExpressionAccess1)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ExpressionAccess1.EC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ExpressionAccess1 getFirstExpressionAccess1Incidence(EdgeDirection orientation) {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ExpressionAccess1)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ExpressionAccess1.EC, orientation);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType getFirstMethodDeclarationReceiverTypeIncidence() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType.EC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType getFirstMethodDeclarationReceiverTypeIncidence(EdgeDirection orientation) {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType.EC, orientation);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions getFirstMethodDeclarationThrownExceptionsIncidence() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions.EC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions getFirstMethodDeclarationThrownExceptionsIncidence(EdgeDirection orientation) {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions.EC, orientation);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc getFirstBodyDeclarationJavadocIncidence() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc.EC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc getFirstBodyDeclarationJavadocIncidence(EdgeDirection orientation) {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc.EC, orientation);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters getFirstMethodDeclarationTypeParametersIncidence() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters.EC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters getFirstMethodDeclarationTypeParametersIncidence(EdgeDirection orientation) {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters.EC, orientation);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SimpleNameValues getFirstSimpleNameValuesIncidence() {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SimpleNameValues)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SimpleNameValues.EC);
	}

	@Override
	public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SimpleNameValues getFirstSimpleNameValuesIncidence(EdgeDirection orientation) {
		return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SimpleNameValues)getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SimpleNameValues.EC, orientation);
	}
		@Override
		public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions add_thrownExceptionTypes(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type vertex) {
			return ((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Java8)getGraph()).createEdge(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions.EC, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclaration) this, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type) vertex);
		}
		@Override
		public java.util.List<? extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type> remove_thrownExceptionTypes() {
			java.util.List<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type> adjacences = new java.util.ArrayList<>();
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions.EC, EdgeDirection.OUT);
				adjacences.add((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_thrownExceptionTypes(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type vertex) {
			boolean elementRemoved = false;
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions.EC, EdgeDirection.OUT);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public <V extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type> Iterable<V> get_thrownExceptionTypes() {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions, V>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions.EC, EdgeDirection.OUT, null);
		}
		
		@Override
		public <V extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type> Iterable<V> get_thrownExceptionTypes(de.uni_koblenz.jgralab.VertexFilter<V> filter) {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions, V>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions.EC, EdgeDirection.OUT, filter);
		}
		@Override
		public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters add_parameters(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SingleVariableDeclaration vertex) {
			return ((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Java8)getGraph()).createEdge(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters.EC, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclaration) this, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SingleVariableDeclaration) vertex);
		}
		@Override
		public java.util.List<? extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SingleVariableDeclaration> remove_parameters() {
			java.util.List<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SingleVariableDeclaration> adjacences = new java.util.ArrayList<>();
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters.EC, EdgeDirection.OUT);
				adjacences.add((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SingleVariableDeclaration) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_parameters(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SingleVariableDeclaration vertex) {
			boolean elementRemoved = false;
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters.EC, EdgeDirection.OUT);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public <V extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SingleVariableDeclaration> Iterable<V> get_parameters() {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters, V>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters.EC, EdgeDirection.OUT, null);
		}
		
		@Override
		public <V extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SingleVariableDeclaration> Iterable<V> get_parameters(de.uni_koblenz.jgralab.VertexFilter<V> filter) {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters, V>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters.EC, EdgeDirection.OUT, filter);
		}
		@Override
		public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody add_body(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Block vertex) {
			return ((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Java8)getGraph()).createEdge(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody.EC, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclaration) this, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Block) vertex);
		}
		@Override
		public java.util.List<? extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Block> remove_body() {
			java.util.List<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Block> adjacences = new java.util.ArrayList<>();
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody.EC, EdgeDirection.OUT);
				adjacences.add((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Block) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_body(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Block vertex) {
			boolean elementRemoved = false;
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody.EC, EdgeDirection.OUT);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Block get_body() {
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody.EC, EdgeDirection.OUT);
			if (edge != null) {
				return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Block) edge.getThat();
			}
			return null;
		}
		@Override
		public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType add_receiverType(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type vertex) {
			return ((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Java8)getGraph()).createEdge(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType.EC, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclaration) this, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type) vertex);
		}
		@Override
		public java.util.List<? extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type> remove_receiverType() {
			java.util.List<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type> adjacences = new java.util.ArrayList<>();
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType.EC, EdgeDirection.OUT);
				adjacences.add((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_receiverType(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type vertex) {
			boolean elementRemoved = false;
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType.EC, EdgeDirection.OUT);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type get_receiverType() {
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType.EC, EdgeDirection.OUT);
			if (edge != null) {
				return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type) edge.getThat();
			}
			return null;
		}
		@Override
		public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc add_javadoc(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Javadoc vertex) {
			return ((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Java8)getGraph()).createEdge(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc.EC, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclaration) this, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Javadoc) vertex);
		}
		@Override
		public java.util.List<? extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Javadoc> remove_javadoc() {
			java.util.List<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Javadoc> adjacences = new java.util.ArrayList<>();
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc.EC, EdgeDirection.OUT);
				adjacences.add((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Javadoc) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_javadoc(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Javadoc vertex) {
			boolean elementRemoved = false;
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc.EC, EdgeDirection.OUT);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Javadoc get_javadoc() {
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc.EC, EdgeDirection.OUT);
			if (edge != null) {
				return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Javadoc) edge.getThat();
			}
			return null;
		}
		@Override
		public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier add_receiverQualifier(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SimpleName vertex) {
			return ((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Java8)getGraph()).createEdge(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier.EC, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclaration) this, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SimpleName) vertex);
		}
		@Override
		public java.util.List<? extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SimpleName> remove_receiverQualifier() {
			java.util.List<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SimpleName> adjacences = new java.util.ArrayList<>();
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier.EC, EdgeDirection.OUT);
				adjacences.add((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SimpleName) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_receiverQualifier(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SimpleName vertex) {
			boolean elementRemoved = false;
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier.EC, EdgeDirection.OUT);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SimpleName get_receiverQualifier() {
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier.EC, EdgeDirection.OUT);
			if (edge != null) {
				return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SimpleName) edge.getThat();
			}
			return null;
		}
		@Override
		public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers add_modifiers2(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Modifier vertex) {
			return ((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Java8)getGraph()).createEdge(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers.EC, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclaration) this, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Modifier) vertex);
		}
		@Override
		public java.util.List<? extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Modifier> remove_modifiers2() {
			java.util.List<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Modifier> adjacences = new java.util.ArrayList<>();
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers.EC, EdgeDirection.OUT);
				adjacences.add((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Modifier) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_modifiers2(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Modifier vertex) {
			boolean elementRemoved = false;
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers.EC, EdgeDirection.OUT);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public <V extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Modifier> Iterable<V> get_modifiers2() {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers, V>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers.EC, EdgeDirection.OUT, null);
		}
		
		@Override
		public <V extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Modifier> Iterable<V> get_modifiers2(de.uni_koblenz.jgralab.VertexFilter<V> filter) {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers, V>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers.EC, EdgeDirection.OUT, filter);
		}
		@Override
		public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation add_modifiers1(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Annotation vertex) {
			return ((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Java8)getGraph()).createEdge(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation.EC, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclaration) this, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Annotation) vertex);
		}
		@Override
		public java.util.List<? extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Annotation> remove_modifiers1() {
			java.util.List<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Annotation> adjacences = new java.util.ArrayList<>();
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation.EC, EdgeDirection.OUT);
				adjacences.add((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Annotation) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_modifiers1(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Annotation vertex) {
			boolean elementRemoved = false;
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation.EC, EdgeDirection.OUT);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public <V extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Annotation> Iterable<V> get_modifiers1() {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation, V>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation.EC, EdgeDirection.OUT, null);
		}
		
		@Override
		public <V extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Annotation> Iterable<V> get_modifiers1(de.uni_koblenz.jgralab.VertexFilter<V> filter) {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation, V>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation.EC, EdgeDirection.OUT, filter);
		}
		@Override
		public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters add_typeParameters(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.TypeParameter vertex) {
			return ((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Java8)getGraph()).createEdge(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters.EC, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclaration) this, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.TypeParameter) vertex);
		}
		@Override
		public java.util.List<? extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.TypeParameter> remove_typeParameters() {
			java.util.List<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.TypeParameter> adjacences = new java.util.ArrayList<>();
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters.EC, EdgeDirection.OUT);
				adjacences.add((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.TypeParameter) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_typeParameters(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.TypeParameter vertex) {
			boolean elementRemoved = false;
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters.EC, EdgeDirection.OUT);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public <V extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.TypeParameter> Iterable<V> get_typeParameters() {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters, V>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters.EC, EdgeDirection.OUT, null);
		}
		
		@Override
		public <V extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.TypeParameter> Iterable<V> get_typeParameters(de.uni_koblenz.jgralab.VertexFilter<V> filter) {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters, V>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters.EC, EdgeDirection.OUT, filter);
		}
		@Override
		public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression add_expression(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Expression vertex) {
			return ((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Java8)getGraph()).createEdge(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression.EC, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclaration) this, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Expression) vertex);
		}
		@Override
		public java.util.List<? extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Expression> remove_expression() {
			java.util.List<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Expression> adjacences = new java.util.ArrayList<>();
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression.EC, EdgeDirection.OUT);
				adjacences.add((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Expression) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_expression(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Expression vertex) {
			boolean elementRemoved = false;
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression.EC, EdgeDirection.OUT);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public <V extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Expression> Iterable<V> get_expression() {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression, V>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression.EC, EdgeDirection.OUT, null);
		}
		
		@Override
		public <V extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Expression> Iterable<V> get_expression(de.uni_koblenz.jgralab.VertexFilter<V> filter) {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression, V>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression.EC, EdgeDirection.OUT, filter);
		}
		@Override
		public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType add_returnType2(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type vertex) {
			return ((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Java8)getGraph()).createEdge(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType.EC, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclaration) this, (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type) vertex);
		}
		@Override
		public java.util.List<? extends de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type> remove_returnType2() {
			java.util.List<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type> adjacences = new java.util.ArrayList<>();
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType.EC, EdgeDirection.OUT);
				adjacences.add((de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_returnType2(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type vertex) {
			boolean elementRemoved = false;
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType.EC, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType next = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType) edge.getNextIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType.EC, EdgeDirection.OUT);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type get_returnType2() {
			de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType edge = (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType) getFirstIncidence(de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType.EC, EdgeDirection.OUT);
			if (edge != null) {
				return (de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Type) edge.getThat();
			}
			return null;
		}

	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters> getMethodDeclarationParametersIncidences() {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters.EC);
	}
	
	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters> getMethodDeclarationParametersIncidences(EdgeDirection direction) {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationParameters.EC, direction);
	}

	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression> getElementExpressionIncidences() {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression.EC);
	}
	
	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression> getElementExpressionIncidences(EdgeDirection direction) {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ElementExpression.EC, direction);
	}

	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.AnonymousClassDeclarationBodyDeclarations> getAnonymousClassDeclarationBodyDeclarationsIncidences() {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.AnonymousClassDeclarationBodyDeclarations.EC);
	}
	
	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.AnonymousClassDeclarationBodyDeclarations> getAnonymousClassDeclarationBodyDeclarationsIncidences(EdgeDirection direction) {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.AnonymousClassDeclarationBodyDeclarations.EC, direction);
	}

	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody> getMethodDeclarationBodyIncidences() {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody.EC);
	}
	
	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody> getMethodDeclarationBodyIncidences(EdgeDirection direction) {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationBody.EC, direction);
	}

	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Access> getAccessIncidences() {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Access.EC);
	}
	
	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Access> getAccessIncidences(EdgeDirection direction) {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Access.EC, direction);
	}

	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType> getMethodDeclarationReturnTypeIncidences() {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType.EC);
	}
	
	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType> getMethodDeclarationReturnTypeIncidences(EdgeDirection direction) {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReturnType.EC, direction);
	}

	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation> getMethodDeclarationAnnotationIncidences() {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation.EC);
	}
	
	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation> getMethodDeclarationAnnotationIncidences(EdgeDirection direction) {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationAnnotation.EC, direction);
	}

	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.EnumDeclarationBodyDeclaration> getEnumDeclarationBodyDeclarationIncidences() {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.EnumDeclarationBodyDeclaration.EC);
	}
	
	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.EnumDeclarationBodyDeclaration> getEnumDeclarationBodyDeclarationIncidences(EdgeDirection direction) {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.EnumDeclarationBodyDeclaration.EC, direction);
	}

	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.LambdaExpressionBody> getLambdaExpressionBodyIncidences() {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.LambdaExpressionBody.EC);
	}
	
	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.LambdaExpressionBody> getLambdaExpressionBodyIncidences(EdgeDirection direction) {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.LambdaExpressionBody.EC, direction);
	}

	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier> getMethodDeclarationReceiverQualifierIncidences() {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier.EC);
	}
	
	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier> getMethodDeclarationReceiverQualifierIncidences(EdgeDirection direction) {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverQualifier.EC, direction);
	}

	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.TypeDeclarationBodyDeclarations1> getTypeDeclarationBodyDeclarations1Incidences() {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.TypeDeclarationBodyDeclarations1.EC);
	}
	
	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.TypeDeclarationBodyDeclarations1> getTypeDeclarationBodyDeclarations1Incidences(EdgeDirection direction) {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.TypeDeclarationBodyDeclarations1.EC, direction);
	}

	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers> getMethodDeclarationModifiersIncidences() {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers.EC);
	}
	
	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers> getMethodDeclarationModifiersIncidences(EdgeDirection direction) {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationModifiers.EC, direction);
	}

	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Child> getChildIncidences() {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Child.EC);
	}
	
	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Child> getChildIncidences(EdgeDirection direction) {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.Child.EC, direction);
	}

	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ExpressionAccess1> getExpressionAccess1Incidences() {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ExpressionAccess1.EC);
	}
	
	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ExpressionAccess1> getExpressionAccess1Incidences(EdgeDirection direction) {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.ExpressionAccess1.EC, direction);
	}

	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType> getMethodDeclarationReceiverTypeIncidences() {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType.EC);
	}
	
	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType> getMethodDeclarationReceiverTypeIncidences(EdgeDirection direction) {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationReceiverType.EC, direction);
	}

	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions> getMethodDeclarationThrownExceptionsIncidences() {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions.EC);
	}
	
	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions> getMethodDeclarationThrownExceptionsIncidences(EdgeDirection direction) {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationThrownExceptions.EC, direction);
	}

	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc> getBodyDeclarationJavadocIncidences() {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc.EC);
	}
	
	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc> getBodyDeclarationJavadocIncidences(EdgeDirection direction) {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.BodyDeclarationJavadoc.EC, direction);
	}

	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters> getMethodDeclarationTypeParametersIncidences() {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters.EC);
	}
	
	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters> getMethodDeclarationTypeParametersIncidences(EdgeDirection direction) {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.MethodDeclarationTypeParameters.EC, direction);
	}

	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SimpleNameValues> getSimpleNameValuesIncidences() {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SimpleNameValues.EC);
	}
	
	@Override
	public Iterable<de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SimpleNameValues> getSimpleNameValuesIncidences(EdgeDirection direction) {
		return new IncidenceIterable<>(this, de.uni_due.s3.jack2.backend.checkers.greqljavachecker.schema.java8.schema.SimpleNameValues.EC, direction);
	}
}
